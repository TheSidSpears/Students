-настроить права для папок 
-для ссылки Выход сделать token


-дописать StudentValidator (регулярки)
-StudentDataGatewayСделать проверку, а нет ли такого чувака в базе по e-mail'у
-Student: данные можно добавлять как через addInfo, так и напрямую. Верно ли это?




> $check_student=new Student($form_data['name'],$form_data['sname'],$form_data['group_num'],$form_data['points'],$form_data['gender'],$form_data['email'],$form_data['b_year'],$form_data['is_resident']);
Слишком много аргументов. Невозможно пользоваться функцией у которой там много аргументов. Не больше 4-5 должно быть. В случае модели, там обычно вообще делают пучтой конструктор.



> https://github.com/TheSidSpears/Students/blob/master/app/bootstrap.php
> Route::start();
Это не бутстрап. Скрипт инициализации должен только инициализировать приложение, подготовить нужные объекты, но не должен пытаться что-то роутить. То что у тебя называется front controller.




Кстати, тебе дополнительное задание. Сделай Cli скрипт который загружает по очереди всех студентов из БД, проверяет каждого на правильность и если есть ошибки, пишет id студента и подробности ошибок.





> catch(Exception $e){
>            echo "Исключение: ", $e->getMessage(),"\n";
Почитай про исключения https://github.com/codedokode/pasta/blob/master/php/exceptions.md

-> Ты про пользовательские классы исключений? Реализовал

нет, про то как надо делать страницу ошибки. Логгировать все, код правильный выдавать







> include('public/'.$controller.'.php');
Ты по моему не понял что такое папка public. перечитай примечания к задаче про студентов. Идея в том что мы делаем эту папку корнем сайта и соответственно все файлы снаружи нее недоступны напрямую. И наоборот, все, что положено в public, доступно пользователю.





Мне не нравится роутинг через гет параметры. Надо либо сделать либо такие URL:

- example.com/
- example.com/register.php

Либо например такие:

- example.com/register






https://github.com/TheSidSpears/Students/blob/master/app/class/Student.php
Класс сделан неудачно. Нельзя просто создать студента с незаполненными полями, надо передавать 10 аргументов, причем из порядок наизусть не запомнить.

> Делаем пустой конструктор и фунцию addInfo($array). Так?
Можно и так, но не забудь про белый список полей которые разрешено изменять.





> function __construct($db_params){
>        //подключаемся к БД через PDO
Почитай урок про DI https://gist.github.com/codedokode/e1d31a31b37d5f635057

Соединяться с базой - это ответсвенность другого класса, а не gateway. gateway незачем иметь ссылку на конфиг так как разбирать конфиги - тоже не его задача. правильно когда каждый класс занимается своим делом, а у тебя код работы с конфигом например размазан по нескольким местам.








Класс Route должен называться FrontController. Роутер только анализиурет URL и никого сам не вызывает.